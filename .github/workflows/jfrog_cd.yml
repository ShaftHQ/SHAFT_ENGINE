name: jFrog Continuous Delivery
# Executed automatically when a new PR is merged to master, if the release number already exists this job will fail
# This pipeline will build from main, upload the artifacts, and create the GitHub release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_release_and_deliver:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'
          check-latest: true
      # Captures the engine version from the pom.xml
      - name: Set Release Version Number
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      # Attempt to create a GitHub release using the version in the pom.xml, if this release already exists, this job will fail fast
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: false
          generateReleaseNotes: true
          name: ${{ env.RELEASE_VERSION }}
          tag: ${{ env.RELEASE_VERSION }}
      - name: Install SHAFT
        continue-on-error: true
        run: mvn clean install -DskipTests
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
      - name: Verify Automatest Artifactory is Reachable
        run: |
          jf rt ping
      - name: Upload SHAFT Release Files
        run: |
          jf rt u "/home/runner/.m2/repository/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/*.jar" "SHAFT_ENGINE/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/" --flat=true --detailed-summary=true
          jf rt u "/home/runner/.m2/repository/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/*.pom" "SHAFT_ENGINE/io/github/shafthq/SHAFT_ENGINE/${{ env.RELEASE_VERSION }}/" --flat=true --detailed-summary=true
