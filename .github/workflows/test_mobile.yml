name: Mobile Native Tests

on:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    - cron: '00 1 * * *'
  workflow_dispatch:

env:
  ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 60

jobs:
  mobile:
    name: Run Mobile-based Tests on MacOS
    runs-on: macOS-12
    timeout-minutes: 30

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
                  
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Run build with Gradle wrapper
        run: gradlew --version

      - uses: maxim-lobanov/setup-android-tools@v1
        with:
          packages: |
            cmdline-tools;latest
            emulator
            patcher;v4
            platform-tools
            build-tools;31.0.0
            platforms;android-31
            skiaparser;3
            sources;android-31
            add-ons;addon-google_apis-google-24
            system-images;android-31;google_apis;arm64-v8a
          cache: true

      - name: Create Android emulator
        run: |
               echo "$ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_API_31_GAPPS -d pixel --package 'system-images;android-31;google_apis;arm64-v8a'"
               $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_API_31_GAPPS -d pixel --package 'system-images;android-31;google_apis;arm64-v8a'
               
               echo "$ANDROID_HOME/emulator/emulator -list-avds"
               $ANDROID_HOME/emulator/emulator -list-avds
               
               echo "$ANDROID_HOME/emulator/emulator -accel-check"
               $ANDROID_HOME/emulator/emulator -accel-check
               
               echo "emulator_config=~/.android/avd/Pixel_API_31_GAPPS.avd/config.ini"
               emulator_config=~/.android/avd/Pixel_API_31_GAPPS.avd/config.ini
               
               echo "Emulator settings ($emulator_config)"
               cat "$emulator_config"
               
                #echo "Replace existing config (NOTE we're on MacOS so sed works differently!)"
                #sed -i .bak 's/hw.lcd.density=.*/hw.lcd.density=420/' "$emulator_config"
                #sed -i .bak 's/hw.lcd.height=.*/hw.lcd.height=1920/' "$emulator_config"
                #sed -i .bak 's/hw.lcd.width=.*/hw.lcd.width=1080/' "$emulator_config"
                #echo "Or, add new config"
                #if ! grep -q "hw.lcd.density" "$emulator_config"; then
                #echo "hw.lcd.density=420" >> "$emulator_config"
                #fi
                #if ! grep -q "hw.lcd.height" "$emulator_config"; then
                #echo "hw.lcd.height=1920" >> "$emulator_config"
                #fi
                #if ! grep -q "hw.lcd.width" "$emulator_config"; then
                #echo "hw.lcd.width=1080" >> "$emulator_config"
                #fi
               #echo "Emulator settings ($emulator_config)"
               #cat "$emulator_config"

      - name: List all sdkmanager options
        run: |
          $ANDROID_HOME/tools/bin/sdkmanager --list
          
      - name: Update Android emulator
        run: |
          $ANDROID_HOME/tools/bin/sdkmanager --update
          
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'
          check-latest: true

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Appium
        run: |
          npm install --global appium@next
          appium driver install uiautomator2
          appium driver install xcuitest

      - name: Run Appium Server
        run: appium --log-timestamp --log appiumServer.log &

      - name: Poll for Appium Server to Start
        run: |
          until $(curl --output /dev/null --silent --head --fail http://localhost:4723/sessions); do
            sleep 5
          done

      - name: Start Android emulator
        run: |
          echo "Starting emulator and waiting for boot to complete...."
          ls -la $ANDROID_HOME/emulator
          $ANDROID_HOME/tools/emulator -avd Pixel_API_31_GAPPS -engine auto -memory 4096 -gpu auto -no-audio -no-boot-anim -camera-back none -camera-front none -no-snapshot -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device
          echo "Emulator has finished booting"
          $ANDROID_HOME/platform-tools/adb devices
          #$ANDROID_HOME/platform-tools/adb shell 'su;setprop debug.hwui.renderer skiagl;stop;start'
          sleep 30
          screencapture screenshot.jpg
          $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator.png

      #- name: Install recorder and record session
        #run: |
          #brew install ffmpeg
          #$ANDROID_HOME/tools/emulator -port 18725 -verbose -no-window -no-audio -gpu swiftshader_indirect @Pixel_API_31_GAPPS &
          #ffmpeg -f avfoundation -i 0 -t 120 out.mov
        #env:
          #HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: Run Android Tests
        continue-on-error: true
        run: mvn test -DexecutionAddress="localhost:4723" -DtargetOperatingSystem="Android" -Dmobile_automationName="UIAutomator2" -Dmobile_app="src/test/resources/TestDataFiles/apps/ApiDemos-debug.apk" -DgenerateAllureReportArchive="true" -Dtest="%regex[.*Android.*]"

      #- name: Upload Video
        #if: always()
        #uses: actions/upload-artifact@master
        #with:
          #name: out
          #path: out.mov

      - name: Upload Initial Device screenshot
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: screenshot.jpg
          path: screenshot.jpg

      - name: Upload Initial Emulator screenshot
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: emulator.png
          path: emulator.png
          
      - name: Upload Appium Server Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: appiumServer.log
          path: appiumServer.log

      - name: Upload Allure Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mobile Native Tests Allure Report
          path: "generatedReport_*.zip"

      - name: Upload Extent Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mobile Native Tests Extent Report
          path: "extent-reports/ExtentReports_*.html"
