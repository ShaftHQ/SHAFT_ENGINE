name: Maven Central Continuous Delivery
# Executed automatically when a new PR is merged to master, if the release number already exists this job will fail
# This pipeline will build from main, upload the artifacts, and create the GitHub release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_release_and_deliver:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'
          check-latest: true
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      # Captures the engine version from the pom.xml
      - name: Set Release Version Number
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      # Attempt to create a GitHub release using the version in the pom.xml, if this release already exists, this job will fail fast
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: false
          generateReleaseNotes: true
          name: ${{ env.RELEASE_VERSION }}
          tag: ${{ env.RELEASE_VERSION }}    
      - name: Deploy SHAFT to maven central
        continue-on-error: true
        run: mvn -e clean deploy -DskipTests
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
